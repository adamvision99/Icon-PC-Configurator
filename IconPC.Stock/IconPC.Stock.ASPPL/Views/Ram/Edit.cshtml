@model IconPC.Stock.ASPPL.Models.RAM
@using IconPC.Stock.ASPPL.Models;

@{
    ViewBag.Title = "Изменить";
    var ramtypes = ViewBag.RAMtypes as IEnumerable<RAMtype>;
}

<h2>Изменить</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RAM</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RAMtypes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RAMtypes.Name,
           ramtypes.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString(), Selected = true }),
           new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RAMtypes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumberOfModules, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumberOfModules, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumberOfModules, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MemoryFrequency, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MemoryFrequency, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MemoryFrequency, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Latency, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Latency, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Latency, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
